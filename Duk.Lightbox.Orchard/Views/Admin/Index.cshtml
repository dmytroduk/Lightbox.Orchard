@model Duk.Lightbox.Orchard.Models.SettingsViewModel
@using (Html.BeginForm("Index", "Admin", FormMethod.Post, new { area = "Duk.Lightbox.Orchard", id = "settingsForm" }))
{
        @Html.ValidationSummary() 
    <fieldset>
        <label for="enabled">@T("Enable Lightbox")</label>
        @Html.CheckBoxFor(m => m.Enabled)
    </fieldset>
    <fieldset>
        <label for="containerSelector">@T("Container selector")</label>
        @Html.TextBoxFor(m => m.ContainerSelector, new { @class = "textMedium" })
        <div class="hint"><p>jQuery selector to indentify containers where Lightbox should be enabled. Examples:</p>
            <ul>
                <li><code>#content</code> means that Lightbox should be enabled for links inside element that has ID = content.</li>
                <li><code>#content, .sidebar</code> means that Lightbox should be enabled ofr links inside element with ID <code>content</code> and element with class <code>sidebar</code>.</li>
                <li>Content selector <code>*</code> enables Lightbox for all links on the page.</li>
            </ul>
        </div>
    </fieldset>
    <fieldset>
        <label for="containerSelector">@T("Link must has one of the following classes")</label>
        @Html.TextBoxFor(m => m.LinkClasses, new { @class = "textMedium" })
        <div class="hint"><p>CSS class names separated by whitespaces or commas. Example:</p>
            <ul>
                <li><code>lightbox gallery</code> enales lightbox for links that have lightbox or gallery CSS classes.</li>
            </ul>
        </div>
    </fieldset>
    <fieldset>
        <label for="containerSelector">@T("Link must has rel attribute with following value")</label>
        @Html.TextBoxFor(m => m.LinkRelAttributeValue, new { @class = "textMedium" })
        <div class="hint"><p>Example:</p>
            <ul>
                <li><code>gallery</code> enales lightbox for links that have rel="gallery" attribute.</li>
            </ul>
        </div>
    </fieldset>
    <fieldset>
        <label for="imageChildTagRequired">@T("Link must have child image tag")</label>
        @Html.CheckBoxFor(m => m.ImageChildTagRequired)
        <div class="hint"><p>Enables Lightbox only for those links that have image child. If this oprion is set:</p>
            <ul>
                <li>Lightbox is enabled for links like this: <code>&lt;a href=&quot;image.png&quot;&gt;&lt;img src=&quot;image_thumb.png&quot; /&gt;&lt;/a&gt;</code></li>
                <li>Lightbox is disabled for links like this: <code>&lt;a href=&quot;image.png&quot;&gt;Link to image&lt;/a&gt;</code>
            </ul>
        </div>
    </fieldset>
    <fieldset>
        <label for="linkToImageRequired">@T("Link must refer file with image extension")</label>
        @Html.CheckBoxFor(m => m.LinkToImageRequired)
        <div class="hint"><p>Enables Lightbox only links that refers graphical files with defined extensions.</p></div>
    </fieldset>
    <fieldset>
        <label for="imageFileExtensions">@T("Image file extensions")</label>
        @Html.TextBoxFor(m => m.ImageFileExtensions, new { @class = "textMedium" })
        <div class="hint"><p>The list of image file extensions that lightbox should be enabled for.</p></div>
    </fieldset>
    
    @Html.AntiForgeryTokenOrchard()
    
        <input type="submit" class="button" id="submitButton" value="@T("Save")" />
}
